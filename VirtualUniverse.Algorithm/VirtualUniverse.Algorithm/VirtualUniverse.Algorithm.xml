<?xml version="1.0"?>
<doc>
    <assembly>
        <name>VirtualUniverse.Algorithm</name>
    </assembly>
    <members>
        <member name="T:VirtualUniverse.Algorithm.MathComputer.Exceptions.RandomRangeException">
            <summary>
            随机数生成异常
            </summary>
        </member>
        <member name="M:VirtualUniverse.Algorithm.MathComputer.Exceptions.RandomRangeException.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:VirtualUniverse.Algorithm.MathComputer.Exceptions.RandomRangeException.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:VirtualUniverse.Algorithm.MathComputer.Exceptions.RandomRangeException.#ctor(System.String,System.Exception)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="P:VirtualUniverse.Algorithm.MathComputer.Exceptions.RandomRangeException.Data">
            <summary>
            
            </summary>
        </member>
        <member name="P:VirtualUniverse.Algorithm.MathComputer.Exceptions.RandomRangeException.HelpLink">
            <summary>
            
            </summary>
        </member>
        <member name="P:VirtualUniverse.Algorithm.MathComputer.Exceptions.RandomRangeException.Message">
            <summary>
            
            </summary>
        </member>
        <member name="P:VirtualUniverse.Algorithm.MathComputer.Exceptions.RandomRangeException.Source">
            <summary>
            
            </summary>
        </member>
        <member name="P:VirtualUniverse.Algorithm.MathComputer.Exceptions.RandomRangeException.StackTrace">
            <summary>
            
            </summary>
        </member>
        <member name="M:VirtualUniverse.Algorithm.MathComputer.Exceptions.RandomRangeException.Equals(System.Object)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:VirtualUniverse.Algorithm.MathComputer.Exceptions.RandomRangeException.GetBaseException">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:VirtualUniverse.Algorithm.MathComputer.Exceptions.RandomRangeException.GetHashCode">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:VirtualUniverse.Algorithm.MathComputer.Exceptions.RandomRangeException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:VirtualUniverse.Algorithm.MathComputer.Exceptions.RandomRangeException.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:VirtualUniverse.Algorithm.MathComputer.MathUtil">
            <summary>
            数学工具类
            </summary>
        </member>
        <member name="M:VirtualUniverse.Algorithm.MathComputer.MathUtil.Random(System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            生成整型随机数
            </summary>
            <param name="minValue">最小值</param>
            <param name="maxValue">最大值</param>
            <param name="isContainerMinValue">是否包含最小值</param>
            <param name="isContainerMaxValue">是否包含最大值</param>
            <returns></returns>
        </member>
        <member name="M:VirtualUniverse.Algorithm.MathComputer.MathUtil.Random(System.Double,System.Double,System.Boolean,System.Boolean)">
            <summary>
            生成双精度浮点型随机数
            </summary>
            <param name="minValue">最小值</param>
            <param name="maxValue">最大值</param>
            <param name="isContainerMinValue">是否包含最小值</param>
            <param name="isContainerMaxValue">是否包含最大值</param>
            <returns></returns>
        </member>
        <member name="T:VirtualUniverse.Algorithm.MathComputer.Services.RandomNumberService">
            <summary>
            随机数生成服务
            </summary>
        </member>
        <member name="M:VirtualUniverse.Algorithm.MathComputer.Services.RandomNumberService.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:VirtualUniverse.Algorithm.MathComputer.Services.RandomNumberService.GenerateRandom(System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            生成整型随机数
            </summary>
            <param name="minValue"></param>
            <param name="maxValue"></param>
            <param name="isContainerMinValue"></param>
            <param name="isContainerMaxValue"></param>
            <returns></returns>
        </member>
        <member name="M:VirtualUniverse.Algorithm.MathComputer.Services.RandomNumberService.CheckRandomRange(System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            验证minValue和maxValue的取值范围是否符合规范
            </summary>
            <param name="minValue"></param>
            <param name="maxValue"></param>
            <param name="isContainerMinValue"></param>
            <param name="isContainerMaxValue"></param>
        </member>
        <member name="M:VirtualUniverse.Algorithm.MathComputer.Services.RandomNumberService.RandomRangeExceptionInfoFormat(System.Int32,System.Int32,System.Boolean,System.Boolean,System.String)">
            <summary>
            格式化异常信息
            </summary>
            <param name="minValue"></param>
            <param name="maxValue"></param>
            <param name="isContainerMinValue"></param>
            <param name="isContainerMaxValue"></param>
            <param name="operation"></param>
            <returns></returns>
        </member>
        <member name="M:VirtualUniverse.Algorithm.MathComputer.Services.RandomNumberService.GenerateRandom(System.Double,System.Double,System.Boolean,System.Boolean)">
            <summary>
            随机生成双精度浮点数
            </summary>
            <param name="minValue"></param>
            <param name="maxValue"></param>
            <param name="isContainerMinValue"></param>
            <param name="isContainerMaxValue"></param>
            <returns></returns>
        </member>
        <member name="M:VirtualUniverse.Algorithm.MathComputer.Services.RandomNumberService.CheckRandomRange(System.Double,System.Double,System.Boolean,System.Boolean)">
            <summary>
            验证minValue和maxValue的取值范围是否符合规范
            </summary>
            <param name="minValue"></param>
            <param name="maxValue"></param>
            <param name="isContainerMinValue"></param>
            <param name="isContainerMaxValue"></param>
        </member>
        <member name="M:VirtualUniverse.Algorithm.MathComputer.Services.RandomNumberService.RandomRangeExceptionInfoFormat(System.Double,System.Double,System.Boolean,System.Boolean,System.String)">
            <summary>
            格式化异常信息
            </summary>
            <param name="minValue"></param>
            <param name="maxValue"></param>
            <param name="isContainerMinValue"></param>
            <param name="isContainerMaxValue"></param>
            <param name="operation"></param>
            <returns></returns>
        </member>
        <member name="T:VirtualUniverse.Algorithm.UniqueGenerate.SnowflakeAlgorithm">
            <summary>
            雪花算法
            </summary>
        </member>
        <member name="F:VirtualUniverse.Algorithm.UniqueGenerate.SnowflakeAlgorithm._workerId">
            <summary>
            机器ID
            </summary>
        </member>
        <member name="F:VirtualUniverse.Algorithm.UniqueGenerate.SnowflakeAlgorithm.TimestampBitsLength">
            <summary>
            时间戳bit长度，最大支持使用从1970年至以后139年的时间
            </summary>
        </member>
        <member name="F:VirtualUniverse.Algorithm.UniqueGenerate.SnowflakeAlgorithm.WorkerIdBitsLength">
            <summary>
            机器位bit长度，最大支持2048台机器使用
            </summary>
        </member>
        <member name="F:VirtualUniverse.Algorithm.UniqueGenerate.SnowflakeAlgorithm.SequenceBitsLength">
            <summary>
            序列号bit长度，每毫秒最大支持生成1024个ID
            </summary>
        </member>
        <member name="F:VirtualUniverse.Algorithm.UniqueGenerate.SnowflakeAlgorithm.mutex">
            <summary>
            互斥锁
            </summary>
        </member>
        <member name="F:VirtualUniverse.Algorithm.UniqueGenerate.SnowflakeAlgorithm.OffsetTime">
            <summary>
            偏移时间，这是一个避免重复的随机量，自行设定，不要大于当前时间戳，该值确定后不能改变，否则可能会生成重复ID
            </summary>
        </member>
        <member name="F:VirtualUniverse.Algorithm.UniqueGenerate.SnowflakeAlgorithm.MaxWorkerId">
            <summary>
            最大机器ID
            </summary>
        </member>
        <member name="F:VirtualUniverse.Algorithm.UniqueGenerate.SnowflakeAlgorithm.MaxSequence">
            <summary>
            一毫秒内可以产生计数，如果达到该值则等到下一毫秒在进行生成
            </summary>
        </member>
        <member name="F:VirtualUniverse.Algorithm.UniqueGenerate.SnowflakeAlgorithm.LastTimestamp">
            <summary>
            记录上一次生成时间戳的时间
            </summary>
        </member>
        <member name="M:VirtualUniverse.Algorithm.UniqueGenerate.SnowflakeAlgorithm.GenerateId(System.Int64)">
            <summary>
            生成ID
            </summary>
            <param name="workerId">工作ID</param>
            <returns></returns>
        </member>
        <member name="M:VirtualUniverse.Algorithm.UniqueGenerate.SnowflakeAlgorithm.NextMillis(System.Int64)">
            <summary>
            获取下一毫秒时间戳
            </summary>
            <param name="lastTimestamp"></param>
            <returns></returns>
        </member>
        <member name="M:VirtualUniverse.Algorithm.UniqueGenerate.SnowflakeAlgorithm.TimeGen">
            <summary>
            生成当前时间戳
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>

<?xml version="1.0"?>
<doc>
    <assembly>
        <name>VirtualUniverse.Service.TimedTask</name>
    </assembly>
    <members>
        <member name="T:VirtualUniverse.Service.TimedTask.BaseBackgroundService">
            <summary>
            后台服务基类（定时任务）
            </summary>
        </member>
        <member name="M:VirtualUniverse.Service.TimedTask.BaseBackgroundService.#ctor(System.Func{VirtualUniverse.Service.TimedTask.BaseServiceStartupParam},Microsoft.Extensions.Logging.ILogger{VirtualUniverse.Service.TimedTask.BaseBackgroundService})">
            <summary>
            构造函数
            </summary>
            <param name="func">服务启动参数</param>
            <param name="logger">日志</param>
        </member>
        <member name="M:VirtualUniverse.Service.TimedTask.BaseBackgroundService.Dispose">
            <summary>
            销毁
            </summary>
        </member>
        <member name="M:VirtualUniverse.Service.TimedTask.BaseBackgroundService.Execute(System.Object)">
            <summary>
            执行耗时任务
            </summary>
            <param name="state"></param>
        </member>
        <member name="M:VirtualUniverse.Service.TimedTask.BaseBackgroundService.StartAsync(System.Threading.CancellationToken)">
            <summary>
            启动任务
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:VirtualUniverse.Service.TimedTask.BaseBackgroundService.StopAsync(System.Threading.CancellationToken)">
            <summary>
            结束任务
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:VirtualUniverse.Service.TimedTask.BaseBackgroundService.ExecuteAsync">
            <summary>
            耗时任务
            </summary>
            <returns></returns>
        </member>
        <member name="T:VirtualUniverse.Service.TimedTask.BaseServiceStartupParam">
            <summary>
            服务启动参数
            </summary>
        </member>
        <member name="P:VirtualUniverse.Service.TimedTask.BaseServiceStartupParam.StartNow">
            <summary>
            是否立即启动；是，则只有Interval参数有效，StartTime和EndTime无效；否，则必须设置StartTime
            </summary>
        </member>
        <member name="P:VirtualUniverse.Service.TimedTask.BaseServiceStartupParam.Interval">
            <summary>
            间隔，单位毫秒；默认值为0，表示上一次任务执行完毕后会间隔多久执行下一次任务
            </summary>
        </member>
        <member name="P:VirtualUniverse.Service.TimedTask.BaseServiceStartupParam.StartTime">
            <summary>
            启动时间 (只包含时分秒不包括日期)
            说明：
            如果启动时间不为空，则表示程序会在当天的启动时间之后执行
            </summary>
        </member>
        <member name="P:VirtualUniverse.Service.TimedTask.BaseServiceStartupParam.EndTime">
            <summary>
            结束时间
            说明：
            如果结束时间不为空，则表示程序会在当天的启动时间之前后执行
            </summary>
        </member>
        <member name="T:VirtualUniverse.Service.TimedTask.OnceBackgroundService">
            <summary>
            每日执行一次的后台服务基类
            </summary>
        </member>
        <member name="M:VirtualUniverse.Service.TimedTask.OnceBackgroundService.#ctor(System.Func{VirtualUniverse.Service.TimedTask.OnceServiceStartupParam},Microsoft.Extensions.Logging.ILogger{VirtualUniverse.Service.TimedTask.OnceBackgroundService})">
            <summary>
            
            </summary>
            <param name="func"></param>
            <param name="logger"></param>
        </member>
        <member name="M:VirtualUniverse.Service.TimedTask.OnceBackgroundService.Dispose">
            <summary>
            销毁
            </summary>
        </member>
        <member name="M:VirtualUniverse.Service.TimedTask.OnceBackgroundService.StartAsync(System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:VirtualUniverse.Service.TimedTask.OnceBackgroundService.ExecuteAsync">
            <summary>
            耗时任务
            </summary>
            <returns></returns>
        </member>
        <member name="P:VirtualUniverse.Service.TimedTask.OnceServiceStartupParam.StartNow">
            <summary>
            是否立即启动；是，则只有Interval参数有效，StartTime无效；否，则必须设置StartTime
            </summary>
        </member>
        <member name="P:VirtualUniverse.Service.TimedTask.OnceServiceStartupParam.StartTime">
            <summary>
            启动时间 (只包含时分秒不包括日期)
            说明：
            如果启动时间不为空，则表示程序会在当天的启动时间之后执行
            </summary>
        </member>
    </members>
</doc>

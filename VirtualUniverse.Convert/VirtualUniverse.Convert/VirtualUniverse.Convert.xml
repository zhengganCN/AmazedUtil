<?xml version="1.0"?>
<doc>
    <assembly>
        <name>VirtualUniverse.Convert</name>
    </assembly>
    <members>
        <member name="T:VirtualUniverse.Convert.BaseConvert.BinaryConvert">
            <summary>
            二进制转换
            </summary>
        </member>
        <member name="M:VirtualUniverse.Convert.BaseConvert.BinaryConvert.ToHex(System.String)">
            <summary>
            二进制转十六进制
            </summary>
            <param name="binary">二进制字符串</param>
            <returns></returns>
        </member>
        <member name="M:VirtualUniverse.Convert.BaseConvert.BinaryConvert.ToDecimal(System.String)">
            <summary>
            二进制转十进制
            </summary>
            <param name="binary">二进制字符串</param>
            <returns></returns>
        </member>
        <member name="M:VirtualUniverse.Convert.BaseConvert.BinaryConvert.ToOctal(System.String)">
            <summary>
            二进制转八进制
            </summary>
            <param name="binary">二进制字符串</param>
            <returns></returns>
        </member>
        <member name="M:VirtualUniverse.Convert.BaseConvert.BinaryConvert.CheckBinaryData(System.String)">
            <summary>
            检查二进制字符串是否只包含0或1
            </summary>
            <param name="binary">二进制字符串</param>
            <returns></returns>
        </member>
        <member name="M:VirtualUniverse.Convert.BaseConvert.BinaryConvert.GetHexCharFromFourBinaryChar(System.String)">
            <summary>
            通过4位二进制数获取1位16进制数
            如：1111 => F
            </summary>
            <param name="fourBinary">4位二进制数</param>
            <returns></returns>
        </member>
        <member name="M:VirtualUniverse.Convert.BaseConvert.BinaryConvert.GetOctalCharFromThreeBinaryChar(System.String)">
            <summary>
            通过3位二进制数获取1位8进制数
            如：111 => 7
            </summary>
            <param name="threeBinary">3位二进制数</param>
            <returns></returns>
        </member>
        <member name="T:VirtualUniverse.Convert.BaseConvert.DecimalConvert">
            <summary>
            进制转换
            </summary>
        </member>
        <member name="M:VirtualUniverse.Convert.BaseConvert.DecimalConvert.ToHex(System.Int32)">
            <summary>
            十进制转十六进制
            </summary>
            <param name="dec">十进制数</param>
            <returns></returns>
        </member>
        <member name="M:VirtualUniverse.Convert.BaseConvert.DecimalConvert.ToBinary(System.Int32)">
            <summary>
            十进制转二进制
            </summary>
            <param name="dec">十进制数</param>
            <returns></returns>
        </member>
        <member name="M:VirtualUniverse.Convert.BaseConvert.DecimalConvert.ToOctal(System.Int32)">
            <summary>
            十进制转八进制
            </summary>
            <param name="dec">十进制数</param>
            <returns></returns>
        </member>
        <member name="T:VirtualUniverse.Convert.BaseConvert.HexConvert">
            <summary>
            16进制转换
            </summary>
        </member>
        <member name="M:VirtualUniverse.Convert.BaseConvert.HexConvert.ToDecimal(System.String)">
            <summary>
            十六进制转十进制
            </summary>
            <param name="hex">十六进制数</param>
            <returns></returns>
        </member>
        <member name="M:VirtualUniverse.Convert.BaseConvert.HexConvert.ToBinary(System.String)">
            <summary>
            十六进制转二进制
            </summary>
            <param name="hex">十六进制数</param>
            <returns></returns>
        </member>
        <member name="M:VirtualUniverse.Convert.BaseConvert.HexConvert.ToOctal(System.String)">
            <summary>
            十六进制转八进制
            </summary>
            <param name="hex">十六进制数</param>
            <returns></returns>
        </member>
        <member name="M:VirtualUniverse.Convert.BaseConvert.HexConvert.CheckHexData(System.String)">
            <summary>
            检查16进制数据
            </summary>
            <param name="hex">16进制数据</param>
            <returns></returns>
        </member>
        <member name="M:VirtualUniverse.Convert.BaseConvert.HexConvert.GetFourBinaryCharFromHexChar(System.Char)">
            <summary>
            通过1位16进制数获取4位二进制数
            如：1111 => F
            </summary>
            <param name="oneHex">1位16进制数</param>
            <returns></returns>
        </member>
        <member name="T:VirtualUniverse.Convert.BaseConvert.OctConvert">
            <summary>
            八进制转换
            </summary>
        </member>
        <member name="M:VirtualUniverse.Convert.BaseConvert.OctConvert.ToDecimal(System.String)">
            <summary>
            八进制转十进制
            </summary>
            <param name="octal">八进制数</param>
            <returns></returns>
        </member>
        <member name="M:VirtualUniverse.Convert.BaseConvert.OctConvert.ToBinary(System.String)">
            <summary>
            八进制转二进制
            </summary>
            <param name="octal">八进制数</param>
            <returns></returns>
        </member>
        <member name="M:VirtualUniverse.Convert.BaseConvert.OctConvert.ToHex(System.String)">
            <summary>
            八进制转十六进制
            </summary>
            <param name="octal">八进制数</param>
            <returns></returns>
        </member>
        <member name="M:VirtualUniverse.Convert.BaseConvert.OctConvert.CheckOctalData(System.String)">
            <summary>
            检查8进制数据
            </summary>
            <param name="octal">8进制数据</param>
            <returns></returns>
        </member>
        <member name="M:VirtualUniverse.Convert.BaseConvert.OctConvert.GetThreeBinaryCharFromOctalChar(System.Char)">
            <summary>
            通过1位8进制数获取3位二进制数
            如：111 => 7
            </summary>
            <param name="oneOctal">1位8进制数</param>
            <returns></returns>
        </member>
        <member name="T:VirtualUniverse.Convert.DateTimeConvert.DateTimeConvert">
            <summary>
            时间转换类
            </summary>
        </member>
        <member name="M:VirtualUniverse.Convert.DateTimeConvert.DateTimeConvert.GetCurrentMonthWeekCount(System.DateTime)">
            <summary>
            获取给定月份的周数
            </summary>
            <param name="dateTime">要获取周数的年月</param>
            <returns></returns>
        </member>
        <member name="M:VirtualUniverse.Convert.DateTimeConvert.DateTimeConvert.GetCurrentMonthWeekIndex(System.DateTime)">
            <summary>
            获取给定月份的周索引，从1开始
            </summary>
            <param name="dateTime">要获取周索引的年月</param>
            <returns></returns>
        </member>
        <member name="M:VirtualUniverse.Convert.DateTimeConvert.DateTimeConvert.GetCurrentWeekStartEndTime(System.DateTime,System.Int32)">
            <summary>
            获取给定年月的给定周的起止日期
            </summary>
            <param name="dateTime"></param>
            <param name="week">周，从1开始</param>
            <returns>
            第一项：给定周的开始时间
            第二项：给定周的结束时间
            </returns>
        </member>
        <member name="M:VirtualUniverse.Convert.DateTimeConvert.DateTimeConvert.ToDateTimeNullable(System.String)">
            <summary>
            把字符串转换成可为空的时间格式
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
    </members>
</doc>
